/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface ConstantsInterface extends utils.Interface {
  functions: {
    "basisPointsInTotal()": FunctionFragment;
    "depositIndexNotSet()": FunctionFragment;
    "maxChainPropagationPeriodInBlocks()": FunctionFragment;
    "maxDelegateKeyExpirationPeriodInMs()": FunctionFragment;
    "maxFeeBasisPoints()": FunctionFragment;
    "msInOneHour()": FunctionFragment;
    "pipPriceMultiplier()": FunctionFragment;
    "signatureHashVersion()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "basisPointsInTotal"
      | "depositIndexNotSet"
      | "maxChainPropagationPeriodInBlocks"
      | "maxDelegateKeyExpirationPeriodInMs"
      | "maxFeeBasisPoints"
      | "msInOneHour"
      | "pipPriceMultiplier"
      | "signatureHashVersion"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "basisPointsInTotal",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "depositIndexNotSet",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "maxChainPropagationPeriodInBlocks",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "maxDelegateKeyExpirationPeriodInMs",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "maxFeeBasisPoints",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "msInOneHour",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "pipPriceMultiplier",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "signatureHashVersion",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "basisPointsInTotal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositIndexNotSet",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "maxChainPropagationPeriodInBlocks",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "maxDelegateKeyExpirationPeriodInMs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "maxFeeBasisPoints",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "msInOneHour",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pipPriceMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "signatureHashVersion",
    data: BytesLike
  ): Result;

  events: {};
}

export interface Constants extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ConstantsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    basisPointsInTotal(overrides?: CallOverrides): Promise<[BigNumber]>;

    depositIndexNotSet(overrides?: CallOverrides): Promise<[BigNumber]>;

    maxChainPropagationPeriodInBlocks(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    maxDelegateKeyExpirationPeriodInMs(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    maxFeeBasisPoints(overrides?: CallOverrides): Promise<[BigNumber]>;

    msInOneHour(overrides?: CallOverrides): Promise<[BigNumber]>;

    pipPriceMultiplier(overrides?: CallOverrides): Promise<[BigNumber]>;

    signatureHashVersion(overrides?: CallOverrides): Promise<[number]>;
  };

  basisPointsInTotal(overrides?: CallOverrides): Promise<BigNumber>;

  depositIndexNotSet(overrides?: CallOverrides): Promise<BigNumber>;

  maxChainPropagationPeriodInBlocks(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  maxDelegateKeyExpirationPeriodInMs(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  maxFeeBasisPoints(overrides?: CallOverrides): Promise<BigNumber>;

  msInOneHour(overrides?: CallOverrides): Promise<BigNumber>;

  pipPriceMultiplier(overrides?: CallOverrides): Promise<BigNumber>;

  signatureHashVersion(overrides?: CallOverrides): Promise<number>;

  callStatic: {
    basisPointsInTotal(overrides?: CallOverrides): Promise<BigNumber>;

    depositIndexNotSet(overrides?: CallOverrides): Promise<BigNumber>;

    maxChainPropagationPeriodInBlocks(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    maxDelegateKeyExpirationPeriodInMs(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    maxFeeBasisPoints(overrides?: CallOverrides): Promise<BigNumber>;

    msInOneHour(overrides?: CallOverrides): Promise<BigNumber>;

    pipPriceMultiplier(overrides?: CallOverrides): Promise<BigNumber>;

    signatureHashVersion(overrides?: CallOverrides): Promise<number>;
  };

  filters: {};

  estimateGas: {
    basisPointsInTotal(overrides?: CallOverrides): Promise<BigNumber>;

    depositIndexNotSet(overrides?: CallOverrides): Promise<BigNumber>;

    maxChainPropagationPeriodInBlocks(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    maxDelegateKeyExpirationPeriodInMs(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    maxFeeBasisPoints(overrides?: CallOverrides): Promise<BigNumber>;

    msInOneHour(overrides?: CallOverrides): Promise<BigNumber>;

    pipPriceMultiplier(overrides?: CallOverrides): Promise<BigNumber>;

    signatureHashVersion(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    basisPointsInTotal(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    depositIndexNotSet(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    maxChainPropagationPeriodInBlocks(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    maxDelegateKeyExpirationPeriodInMs(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    maxFeeBasisPoints(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    msInOneHour(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pipPriceMultiplier(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    signatureHashVersion(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
