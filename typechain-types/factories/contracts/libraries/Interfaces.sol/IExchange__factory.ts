/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IExchange,
  IExchangeInterface,
} from "../../../../contracts/libraries/Interfaces.sol/IExchange";

const _abi = [
  {
    inputs: [],
    name: "_depositIndex",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "string",
        name: "assetSymbol",
        type: "string",
      },
    ],
    name: "loadBalanceBySymbol",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isMigrated",
            type: "bool",
          },
          {
            internalType: "int64",
            name: "balanceInPips",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "lastUpdateTimestampInMs",
            type: "uint64",
          },
        ],
        internalType: "struct Balance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "string",
        name: "assetSymbol",
        type: "string",
      },
    ],
    name: "loadBalanceInPipsBySymbol",
    outputs: [
      {
        internalType: "int64",
        name: "",
        type: "int64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "loadCustodian",
    outputs: [
      {
        internalType: "contract ICustodian",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IExchange__factory {
  static readonly abi = _abi;
  static createInterface(): IExchangeInterface {
    return new utils.Interface(_abi) as IExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IExchange {
    return new Contract(address, _abi, signerOrProvider) as IExchange;
  }
}
